{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPickert.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/image.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","fetchDailyData","map","date","reportDate","total","fetchCountries","countries","name","Charts","useState","dailyData","setDailyData","useEffect","fetchApi","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","countriesData","setCountriesData","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","setState","this","image","src","coronaImage","alt","Chart","React","Component","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.0a967235.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","import React from 'react';\nimport {Card, CardContent, Typography, Grid} from '@material-ui/core';\nimport styles from './Cards.module.css';\nimport CountUp from 'react-countup';\nimport cx from 'classnames';\n\nconst Cards = ({data: {confirmed, recovered, deaths, lastUpdate}}) => {\n    if (!confirmed) {\n        return 'Loading...';\n    }\n\n    return (\n        <div className={styles.container}>\n            <Grid container spacing={3} justify=\"center\">\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom>\n                            Infected\n                        </Typography>\n                        <Typography variant=\"h5\" component=\"h2\">\n                            <CountUp start={0} end={confirmed.value} duration={2.75} separator=\",\"/>\n                        </Typography>\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant=\"body2\" component=\"p\">\n                            Number of active cases of COVID-19.\n                        </Typography>\n                    </CardContent>\n                </Grid>\n\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom>\n                            Recovered\n                        </Typography>\n                        <Typography variant=\"h5\" component=\"h2\">\n                            <CountUp start={0} end={recovered.value} duration={2.75} separator=\",\"/>\n                        </Typography>\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant=\"body2\" component=\"p\">\n                            Number of recoveries from COVID-19.\n                        </Typography>\n                    </CardContent>\n                </Grid>\n\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom>\n                            Deaths\n                        </Typography>\n                        <Typography variant=\"h5\" component=\"h2\">\n                            <CountUp start={0} end={deaths.value} duration={2.75} separator=\",\"/>\n                        </Typography>\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant=\"body2\" component=\"p\">\n                            Number of deaths caused by COVID-19.\n                        </Typography>\n                    </CardContent>\n                </Grid>\n            </Grid>\n        </div>\n    )\n};\n\nexport default Cards;","import axios from 'axios';\n\nconst url = 'https://covid19.mathdro.id/api';\n\nexport const fetchData = async (country) => {\n    let changeableUrl = url;\n    if (country) {\n        changeableUrl = `${url}/countries/${country}`;\n    }\n\n    try {\n        const {data: {confirmed, recovered, deaths, lastUpdate}} = await axios.get(changeableUrl);\n        return {confirmed, recovered, deaths, lastUpdate};\n    } catch (e) {\n        return e;\n    }\n};\n\nexport const fetchDailyData = async () => {\n  try {\n      const {data} = await axios.get(`${url}/daily`);\n\n      return data.map(({confirmed, deaths, reportDate: date}) => ({\n          confirmed: confirmed.total,\n          deaths: deaths.total,\n          date\n      }));\n\n  }  catch (e) {\n      return e;\n  }\n};\n\nexport const fetchCountries = async () => {\n  try {\n      const {data: {countries}} = await axios.get(`${url}/countries`);\n      return countries.map((country) => country.name);\n  } catch (e) {\n      return e;\n  }\n};","import React, {useState, useEffect} from 'react';\nimport {fetchDailyData} from '../../api'\nimport {Line, Bar} from 'react-chartjs-2';\n\nimport styles from './Chart.module.css';\n\nconst Charts = ({data: {confirmed, recovered, deaths}, country}) => {\n    const [dailyData, setDailyData] = useState([]);\n\n    useEffect(() => {\n        const fetchApi = async () => {\n            setDailyData(await fetchDailyData());\n        };\n\n        fetchApi();\n    }, [setDailyData]);\n\n    const lineChart = (\n        dailyData.length ? (\n            <Line data={{\n                labels: dailyData.map(({date}) => date),\n                datasets: [{\n                    label: 'Infected',\n                    data:  dailyData.map(({confirmed}) => confirmed),\n                    borderColor: '#3333ff',\n                    fill: true\n                }, {\n                    label: 'Deaths',\n                    data:  dailyData.map(({deaths}) => deaths),\n                    borderColor: 'red',\n                    backgroundColor: 'rgba(255, 0, 0, 0.5)',\n                    fill: true\n                }]\n            }}/>) : null\n    );\n\n    const barChart = (\n        confirmed ? (\n            <Bar\n                data={{\n                    labels: ['Infected', 'Recovered', 'Deaths'],\n                    datasets: [{\n                        label: 'People',\n                        backgroundColor: [\n                            'rgba(0, 0, 255, 0.5)',\n                            'rgba(0, 255, 0, 0.5)',\n                            'rgba(255, 0, 0, 0.5)'\n                        ],\n                        data: [confirmed.value, recovered.value, deaths.value]\n                    }]\n                }}\n                options={{\n                    legend: {display: false},\n                    title: {display: true, text: `Current state in ${country}`}\n                }}\n            />\n        ) : null\n    );\n\n    return (\n        <div className={styles.container}>\n            {country ? barChart : lineChart}\n        </div>\n    )\n};\n\nexport default Charts;","import React, {useState, useEffect} from 'react';\nimport {NativeSelect, FormControl} from '@material-ui/core';\nimport styles from './CountryPicker.module.css';\nimport {fetchCountries} from '../../api'\n\nconst CountryPicker = ({handleCountryChange}) => {\n    const [countriesData, setCountriesData] = useState([]);\n\n    useEffect(() => {\n        const fetchApi = async () => {\n            setCountriesData(await fetchCountries() );\n        };\n\n        fetchApi();\n    }, [setCountriesData]);\n\n    return (\n        <FormControl className={styles.formControl}>\n            <NativeSelect defaultValue={\"\"} onChange={(e) => handleCountryChange(e.target.value)}>\n                <option value=\"\">Global</option>\n                {countriesData.map((country, i) => <option key={i} value={country}>{country}</option>)}\n            </NativeSelect>\n        </FormControl>\n    )\n};\n\nexport default CountryPicker;","import React from 'react';\n\nimport {Cards, Chart, CountryPicker} from './components';\nimport styles from './App.module.css';\nimport {fetchData} from \"./api\";\n\nimport coronaImage from './images/image.png';\n\nclass App extends React.Component {\n    state = {\n        data: {},\n        country: ''\n    };\n\n    async componentDidMount() {\n        const data = await fetchData();\n        this.setState({data});\n    }\n\n    handleCountryChange = async (country) => {\n        const data = await fetchData(country);\n        this.setState({data, country});\n    };\n\n    render() {\n        const {data, country} = this.state;\n        return (\n            <div className={styles.container}>\n                <img className={styles.image} src={coronaImage} alt=\"COVID-19\"/>\n                <Cards data={data}/>\n                <CountryPicker handleCountryChange={this.handleCountryChange}/>\n                <Chart data={data} country={country}/>\n            </div>\n        )\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDom from 'react-dom';\n\n\nimport App from './App';\n\nReactDom.render(<App/>, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}